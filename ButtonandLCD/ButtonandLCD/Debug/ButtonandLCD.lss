
ButtonandLCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000af0  00000b64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000af0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bc4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000168  00000000  00000000  00000c04  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001bb6  00000000  00000000  00000d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c86  00000000  00000000  00002922  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b45  00000000  00000000  000035a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000374  00000000  00000000  000040f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000831  00000000  00000000  00004464  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001020  00000000  00000000  00004c95  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000138  00000000  00000000  00005cb5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  20:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  24:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  2c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  30:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  34:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  38:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  3c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  40:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  48:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  4c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  54:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  68:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  6c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  70:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  74:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  78:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  7c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  80:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  84:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  88:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  8c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  90:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  94:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  98:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  9c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  ac:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  b0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e0 ef       	ldi	r30, 0xF0	; 240
  c8:	fa e0       	ldi	r31, 0x0A	; 10
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 30       	cpi	r26, 0x04	; 4
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>
  d6:	0e 94 1c 02 	call	0x438	; 0x438 <main>
  da:	0c 94 76 05 	jmp	0xaec	; 0xaec <_exit>

000000de <__bad_interrupt>:
  de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <i2c_master_init>:
	}
	
	i2c_master_stop();
	
	return I2C_STATUS_SUCCESS;
}
  e2:	9b 01       	movw	r18, r22
  e4:	ac 01       	movw	r20, r24
  e6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  ea:	60 e0       	ldi	r22, 0x00	; 0
  ec:	74 e2       	ldi	r23, 0x24	; 36
  ee:	84 ef       	ldi	r24, 0xF4	; 244
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__udivmodsi4>
  f6:	da 01       	movw	r26, r20
  f8:	c9 01       	movw	r24, r18
  fa:	40 97       	sbiw	r24, 0x10	; 16
  fc:	a1 09       	sbc	r26, r1
  fe:	b1 09       	sbc	r27, r1
 100:	b6 95       	lsr	r27
 102:	a7 95       	ror	r26
 104:	97 95       	ror	r25
 106:	87 95       	ror	r24
 108:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 10c:	08 95       	ret

0000010e <i2c_master_start>:
 10e:	ec eb       	ldi	r30, 0xBC	; 188
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	10 82       	st	Z, r1
 114:	94 ea       	ldi	r25, 0xA4	; 164
 116:	90 83       	st	Z, r25
 118:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 11c:	99 23       	and	r25, r25
 11e:	e4 f7       	brge	.-8      	; 0x118 <i2c_master_start+0xa>
 120:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 124:	98 7f       	andi	r25, 0xF8	; 248
 126:	98 30       	cpi	r25, 0x08	; 8
 128:	11 f0       	breq	.+4      	; 0x12e <i2c_master_start+0x20>
 12a:	90 31       	cpi	r25, 0x10	; 16
 12c:	b1 f4       	brne	.+44     	; 0x15a <i2c_master_start+0x4c>
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	86 2b       	or	r24, r22
 136:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 13a:	84 e8       	ldi	r24, 0x84	; 132
 13c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 140:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 144:	88 23       	and	r24, r24
 146:	e4 f7       	brge	.-8      	; 0x140 <i2c_master_start+0x32>
 148:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 14c:	88 7f       	andi	r24, 0xF8	; 248
 14e:	88 31       	cpi	r24, 0x18	; 24
 150:	31 f0       	breq	.+12     	; 0x15e <i2c_master_start+0x50>
 152:	80 34       	cpi	r24, 0x40	; 64
 154:	31 f4       	brne	.+12     	; 0x162 <i2c_master_start+0x54>
 156:	80 e0       	ldi	r24, 0x00	; 0
 158:	08 95       	ret
 15a:	8a e0       	ldi	r24, 0x0A	; 10
 15c:	08 95       	ret
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	08 95       	ret
 162:	84 e1       	ldi	r24, 0x14	; 20
 164:	08 95       	ret

00000166 <i2c_master_write>:
 166:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 16a:	84 e8       	ldi	r24, 0x84	; 132
 16c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 170:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 174:	88 23       	and	r24, r24
 176:	e4 f7       	brge	.-8      	; 0x170 <i2c_master_write+0xa>
 178:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 17c:	88 7f       	andi	r24, 0xF8	; 248
 17e:	88 32       	cpi	r24, 0x28	; 40
 180:	11 f0       	breq	.+4      	; 0x186 <i2c_master_write+0x20>
 182:	85 e1       	ldi	r24, 0x15	; 21
 184:	08 95       	ret
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	08 95       	ret

0000018a <i2c_master_stop>:
 18a:	84 e9       	ldi	r24, 0x94	; 148
 18c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 190:	08 95       	ret

00000192 <i2c_master_sendByte>:

uint8_t i2c_master_sendByte(uint8_t address, uint8_t data)
{
 192:	cf 93       	push	r28
 194:	c6 2f       	mov	r28, r22
	uint8_t status = i2c_master_start(address, I2C_WRITE);
 196:	60 e0       	ldi	r22, 0x00	; 0
 198:	0e 94 87 00 	call	0x10e	; 0x10e <i2c_master_start>
	if (status) return status;
 19c:	81 11       	cpse	r24, r1
 19e:	08 c0       	rjmp	.+16     	; 0x1b0 <i2c_master_sendByte+0x1e>

	status = i2c_master_write(data);
 1a0:	8c 2f       	mov	r24, r28
 1a2:	0e 94 b3 00 	call	0x166	; 0x166 <i2c_master_write>
	if (status) return status;
 1a6:	81 11       	cpse	r24, r1
 1a8:	03 c0       	rjmp	.+6      	; 0x1b0 <i2c_master_sendByte+0x1e>

	i2c_master_stop();
 1aa:	0e 94 c5 00 	call	0x18a	; 0x18a <i2c_master_stop>
	
	return I2C_STATUS_SUCCESS;
 1ae:	80 e0       	ldi	r24, 0x00	; 0
};
 1b0:	cf 91       	pop	r28
 1b2:	08 95       	ret

000001b4 <lq_transmitI2C>:

	for (i = 0; i < 8; i++) 
	{
		lq_writeDeviceByte(device, charmap[i], LCD_REGISTER_SELECT_BIT);
	}
}
 1b4:	fc 01       	movw	r30, r24
 1b6:	23 81       	ldd	r18, Z+3	; 0x03
 1b8:	62 2b       	or	r22, r18
 1ba:	80 81       	ld	r24, Z
 1bc:	0e 94 c9 00 	call	0x192	; 0x192 <i2c_master_sendByte>
 1c0:	08 95       	ret

000001c2 <lq_turnOnBacklight>:
 1c2:	28 e0       	ldi	r18, 0x08	; 8
 1c4:	fc 01       	movw	r30, r24
 1c6:	23 83       	std	Z+3, r18	; 0x03
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lq_transmitI2C>
 1ce:	08 95       	ret

000001d0 <lq_writeDevicePulse>:
 1d0:	0f 93       	push	r16
 1d2:	1f 93       	push	r17
 1d4:	cf 93       	push	r28
 1d6:	8c 01       	movw	r16, r24
 1d8:	c6 2f       	mov	r28, r22
 1da:	64 60       	ori	r22, 0x04	; 4
 1dc:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lq_transmitI2C>
 1e0:	8a e0       	ldi	r24, 0x0A	; 10
 1e2:	8a 95       	dec	r24
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <lq_writeDevicePulse+0x12>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <lq_writeDevicePulse+0x18>
 1e8:	6c 2f       	mov	r22, r28
 1ea:	6b 7f       	andi	r22, 0xFB	; 251
 1ec:	c8 01       	movw	r24, r16
 1ee:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lq_transmitI2C>
 1f2:	87 ec       	ldi	r24, 0xC7	; 199
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <lq_writeDevicePulse+0x26>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <lq_writeDevicePulse+0x2c>
 1fc:	00 00       	nop
 1fe:	cf 91       	pop	r28
 200:	1f 91       	pop	r17
 202:	0f 91       	pop	r16
 204:	08 95       	ret

00000206 <lq_writeDevice4Bits>:
 206:	1f 93       	push	r17
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	ec 01       	movw	r28, r24
 20e:	16 2f       	mov	r17, r22
 210:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lq_transmitI2C>
 214:	61 2f       	mov	r22, r17
 216:	ce 01       	movw	r24, r28
 218:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lq_writeDevicePulse>
 21c:	df 91       	pop	r29
 21e:	cf 91       	pop	r28
 220:	1f 91       	pop	r17
 222:	08 95       	ret

00000224 <lq_writeDeviceByte>:
 224:	ff 92       	push	r15
 226:	0f 93       	push	r16
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	8c 01       	movw	r16, r24
 230:	f4 2e       	mov	r15, r20
 232:	86 2f       	mov	r24, r22
 234:	80 7f       	andi	r24, 0xF0	; 240
 236:	90 e1       	ldi	r25, 0x10	; 16
 238:	69 9f       	mul	r22, r25
 23a:	e0 01       	movw	r28, r0
 23c:	11 24       	eor	r1, r1
 23e:	68 2f       	mov	r22, r24
 240:	64 2b       	or	r22, r20
 242:	c8 01       	movw	r24, r16
 244:	0e 94 03 01 	call	0x206	; 0x206 <lq_writeDevice4Bits>
 248:	6c 2f       	mov	r22, r28
 24a:	6f 29       	or	r22, r15
 24c:	c8 01       	movw	r24, r16
 24e:	0e 94 03 01 	call	0x206	; 0x206 <lq_writeDevice4Bits>
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	1f 91       	pop	r17
 258:	0f 91       	pop	r16
 25a:	ff 90       	pop	r15
 25c:	08 95       	ret

0000025e <lq_print>:
 25e:	0f 93       	push	r16
 260:	1f 93       	push	r17
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	8c 01       	movw	r16, r24
 268:	eb 01       	movw	r28, r22
 26a:	68 81       	ld	r22, Y
 26c:	06 c0       	rjmp	.+12     	; 0x27a <lq_print+0x1c>
 26e:	41 e0       	ldi	r20, 0x01	; 1
 270:	c8 01       	movw	r24, r16
 272:	0e 94 12 01 	call	0x224	; 0x224 <lq_writeDeviceByte>
 276:	21 96       	adiw	r28, 0x01	; 1
 278:	68 81       	ld	r22, Y
 27a:	61 11       	cpse	r22, r1
 27c:	f8 cf       	rjmp	.-16     	; 0x26e <lq_print+0x10>
 27e:	df 91       	pop	r29
 280:	cf 91       	pop	r28
 282:	1f 91       	pop	r17
 284:	0f 91       	pop	r16
 286:	08 95       	ret

00000288 <lq_sendCommand>:
 288:	40 e0       	ldi	r20, 0x00	; 0
 28a:	0e 94 12 01 	call	0x224	; 0x224 <lq_writeDeviceByte>
 28e:	08 95       	ret

00000290 <lq_setCursor>:
 290:	cf 93       	push	r28
 292:	df 93       	push	r29
 294:	00 d0       	rcall	.+0      	; 0x296 <lq_setCursor+0x6>
 296:	00 d0       	rcall	.+0      	; 0x298 <lq_setCursor+0x8>
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	19 82       	std	Y+1, r1	; 0x01
 29e:	20 e4       	ldi	r18, 0x40	; 64
 2a0:	2a 83       	std	Y+2, r18	; 0x02
 2a2:	24 e1       	ldi	r18, 0x14	; 20
 2a4:	2b 83       	std	Y+3, r18	; 0x03
 2a6:	24 e5       	ldi	r18, 0x54	; 84
 2a8:	2c 83       	std	Y+4, r18	; 0x04
 2aa:	e1 e0       	ldi	r30, 0x01	; 1
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	ec 0f       	add	r30, r28
 2b0:	fd 1f       	adc	r31, r29
 2b2:	e6 0f       	add	r30, r22
 2b4:	f1 1d       	adc	r31, r1
 2b6:	60 81       	ld	r22, Z
 2b8:	64 0f       	add	r22, r20
 2ba:	60 68       	ori	r22, 0x80	; 128
 2bc:	0e 94 44 01 	call	0x288	; 0x288 <lq_sendCommand>
 2c0:	0f 90       	pop	r0
 2c2:	0f 90       	pop	r0
 2c4:	0f 90       	pop	r0
 2c6:	0f 90       	pop	r0
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	08 95       	ret

000002ce <lq_clear>:
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	ec 01       	movw	r28, r24
 2d4:	61 e0       	ldi	r22, 0x01	; 1
 2d6:	0e 94 44 01 	call	0x288	; 0x288 <lq_sendCommand>
 2da:	8f e3       	ldi	r24, 0x3F	; 63
 2dc:	9f e1       	ldi	r25, 0x1F	; 31
 2de:	01 97       	sbiw	r24, 0x01	; 1
 2e0:	f1 f7       	brne	.-4      	; 0x2de <lq_clear+0x10>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <lq_clear+0x16>
 2e4:	00 00       	nop
 2e6:	40 e0       	ldi	r20, 0x00	; 0
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	ce 01       	movw	r24, r28
 2ec:	0e 94 48 01 	call	0x290	; 0x290 <lq_setCursor>
 2f0:	df 91       	pop	r29
 2f2:	cf 91       	pop	r28
 2f4:	08 95       	ret

000002f6 <lq_returnHome>:
 2f6:	62 e0       	ldi	r22, 0x02	; 2
 2f8:	0e 94 44 01 	call	0x288	; 0x288 <lq_sendCommand>
 2fc:	8f e3       	ldi	r24, 0x3F	; 63
 2fe:	9f e1       	ldi	r25, 0x1F	; 31
 300:	01 97       	sbiw	r24, 0x01	; 1
 302:	f1 f7       	brne	.-4      	; 0x300 <lq_returnHome+0xa>
 304:	00 c0       	rjmp	.+0      	; 0x306 <lq_returnHome+0x10>
 306:	00 00       	nop
 308:	08 95       	ret

0000030a <lq_turnOnDisplay>:
 30a:	fc 01       	movw	r30, r24
 30c:	65 81       	ldd	r22, Z+5	; 0x05
 30e:	26 2f       	mov	r18, r22
 310:	24 60       	ori	r18, 0x04	; 4
 312:	25 83       	std	Z+5, r18	; 0x05
 314:	6c 60       	ori	r22, 0x0C	; 12
 316:	0e 94 44 01 	call	0x288	; 0x288 <lq_sendCommand>
 31a:	08 95       	ret

0000031c <lq_init>:

#include <avr/io.h>
#include <util/delay.h>

LiquidCrystalDevice_t lq_init(uint8_t address, uint8_t columns, uint8_t rows, uint8_t dotSize)
{
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	cd b7       	in	r28, 0x3d	; 61
 322:	de b7       	in	r29, 0x3e	; 62
 324:	2e 97       	sbiw	r28, 0x0e	; 14
 326:	0f b6       	in	r0, 0x3f	; 63
 328:	f8 94       	cli
 32a:	de bf       	out	0x3e, r29	; 62
 32c:	0f be       	out	0x3f, r0	; 63
 32e:	cd bf       	out	0x3d, r28	; 61
	LiquidCrystalDevice_t device;

	device.Address = address;
 330:	88 87       	std	Y+8, r24	; 0x08
	device.Columns = columns;
 332:	69 87       	std	Y+9, r22	; 0x09
	device.Rows = rows;
 334:	4a 87       	std	Y+10, r20	; 0x0a
	device.Backlight = LCD_NOBACKLIGHT;
 336:	1b 86       	std	Y+11, r1	; 0x0b
	device.DisplayFunction = LCD_4BITMODE | LCD_1LINE | dotSize;
 338:	2c 87       	std	Y+12, r18	; 0x0c
	device.DisplayControl = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
 33a:	84 e0       	ldi	r24, 0x04	; 4
 33c:	8d 87       	std	Y+13, r24	; 0x0d

	// Initialize to default text direction (for roman languages)
	device.DisplayMode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
 33e:	82 e0       	ldi	r24, 0x02	; 2
 340:	8e 87       	std	Y+14, r24	; 0x0e

	if (rows > 1) {
 342:	42 30       	cpi	r20, 0x02	; 2
 344:	18 f0       	brcs	.+6      	; 0x34c <lq_init+0x30>
		device.DisplayFunction |= LCD_2LINE;
 346:	82 2f       	mov	r24, r18
 348:	88 60       	ori	r24, 0x08	; 8
 34a:	8c 87       	std	Y+12, r24	; 0x0c
	}

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotSize != 0) && (rows == 1)) {
 34c:	22 23       	and	r18, r18
 34e:	29 f0       	breq	.+10     	; 0x35a <lq_init+0x3e>
 350:	41 30       	cpi	r20, 0x01	; 1
 352:	19 f4       	brne	.+6      	; 0x35a <lq_init+0x3e>
		device.DisplayFunction |= LCD_5x10DOTS;
 354:	8c 85       	ldd	r24, Y+12	; 0x0c
 356:	84 60       	ori	r24, 0x04	; 4
 358:	8c 87       	std	Y+12, r24	; 0x0c
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 35a:	2f ef       	ldi	r18, 0xFF	; 255
 35c:	81 ee       	ldi	r24, 0xE1	; 225
 35e:	94 e0       	ldi	r25, 0x04	; 4
 360:	21 50       	subi	r18, 0x01	; 1
 362:	80 40       	sbci	r24, 0x00	; 0
 364:	90 40       	sbci	r25, 0x00	; 0
 366:	e1 f7       	brne	.-8      	; 0x360 <lq_init+0x44>
 368:	00 c0       	rjmp	.+0      	; 0x36a <lq_init+0x4e>
 36a:	00 00       	nop
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	_delay_ms(100);
	
	// Now we pull both RS and R/W low to begin commands
	lq_transmitI2C(&device, LCD_NOBACKLIGHT);	// reset expanderand turn backlight off (Bit 8 =1)
 36c:	60 e0       	ldi	r22, 0x00	; 0
 36e:	ce 01       	movw	r24, r28
 370:	08 96       	adiw	r24, 0x08	; 8
 372:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lq_transmitI2C>
 376:	2f ef       	ldi	r18, 0xFF	; 255
 378:	83 ed       	ldi	r24, 0xD3	; 211
 37a:	90 e3       	ldi	r25, 0x30	; 48
 37c:	21 50       	subi	r18, 0x01	; 1
 37e:	80 40       	sbci	r24, 0x00	; 0
 380:	90 40       	sbci	r25, 0x00	; 0
 382:	e1 f7       	brne	.-8      	; 0x37c <lq_init+0x60>
 384:	00 c0       	rjmp	.+0      	; 0x386 <lq_init+0x6a>
 386:	00 00       	nop
	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	// we start in 8bit mode, try to set 4 bit mode
	lq_transmitI2C(&device, 0x03 << 4);
 388:	60 e3       	ldi	r22, 0x30	; 48
 38a:	ce 01       	movw	r24, r28
 38c:	08 96       	adiw	r24, 0x08	; 8
 38e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lq_transmitI2C>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 392:	8f e4       	ldi	r24, 0x4F	; 79
 394:	96 e4       	ldi	r25, 0x46	; 70
 396:	01 97       	sbiw	r24, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <lq_init+0x7a>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <lq_init+0x80>
 39c:	00 00       	nop
	_delay_us(4500); // wait min 4.1ms
	
	// second try
	lq_writeDevice4Bits(&device, 0x03 << 4);
 39e:	60 e3       	ldi	r22, 0x30	; 48
 3a0:	ce 01       	movw	r24, r28
 3a2:	08 96       	adiw	r24, 0x08	; 8
 3a4:	0e 94 03 01 	call	0x206	; 0x206 <lq_writeDevice4Bits>
 3a8:	8f e4       	ldi	r24, 0x4F	; 79
 3aa:	96 e4       	ldi	r25, 0x46	; 70
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <lq_init+0x90>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <lq_init+0x96>
 3b2:	00 00       	nop
	_delay_us(4500); // wait min 4.1ms
	
	// third go!
	lq_writeDevice4Bits(&device, 0x03 << 4);
 3b4:	60 e3       	ldi	r22, 0x30	; 48
 3b6:	ce 01       	movw	r24, r28
 3b8:	08 96       	adiw	r24, 0x08	; 8
 3ba:	0e 94 03 01 	call	0x206	; 0x206 <lq_writeDevice4Bits>
 3be:	87 e5       	ldi	r24, 0x57	; 87
 3c0:	92 e0       	ldi	r25, 0x02	; 2
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <lq_init+0xa6>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <lq_init+0xac>
 3c8:	00 00       	nop
	_delay_us(150); // wait min 150 mics
	
	// finally, set to 4-bit interface
	lq_writeDevice4Bits(&device, 0x02 << 4);
 3ca:	60 e2       	ldi	r22, 0x20	; 32
 3cc:	ce 01       	movw	r24, r28
 3ce:	08 96       	adiw	r24, 0x08	; 8
 3d0:	0e 94 03 01 	call	0x206	; 0x206 <lq_writeDevice4Bits>

	// set # lines, font size, etc.
	lq_sendCommand(&device, LCD_FUNCTIONSET | device.DisplayFunction);
 3d4:	6c 85       	ldd	r22, Y+12	; 0x0c
 3d6:	60 62       	ori	r22, 0x20	; 32
 3d8:	ce 01       	movw	r24, r28
 3da:	08 96       	adiw	r24, 0x08	; 8
 3dc:	0e 94 44 01 	call	0x288	; 0x288 <lq_sendCommand>
	
	// turn the display on with no cursor or blinking default
	lq_turnOnDisplay(&device);
 3e0:	ce 01       	movw	r24, r28
 3e2:	08 96       	adiw	r24, 0x08	; 8
 3e4:	0e 94 85 01 	call	0x30a	; 0x30a <lq_turnOnDisplay>
	
	// clear it off
	lq_clear(&device);
 3e8:	ce 01       	movw	r24, r28
 3ea:	08 96       	adiw	r24, 0x08	; 8
 3ec:	0e 94 67 01 	call	0x2ce	; 0x2ce <lq_clear>
	
	// set the entry mode
	lq_sendCommand(&device, LCD_ENTRYMODESET | device.DisplayMode);
 3f0:	6e 85       	ldd	r22, Y+14	; 0x0e
 3f2:	64 60       	ori	r22, 0x04	; 4
 3f4:	ce 01       	movw	r24, r28
 3f6:	08 96       	adiw	r24, 0x08	; 8
 3f8:	0e 94 44 01 	call	0x288	; 0x288 <lq_sendCommand>
	
	lq_returnHome(&device);
 3fc:	ce 01       	movw	r24, r28
 3fe:	08 96       	adiw	r24, 0x08	; 8
 400:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <lq_returnHome>

	return device;
 404:	87 e0       	ldi	r24, 0x07	; 7
 406:	fe 01       	movw	r30, r28
 408:	38 96       	adiw	r30, 0x08	; 8
 40a:	de 01       	movw	r26, r28
 40c:	11 96       	adiw	r26, 0x01	; 1
 40e:	01 90       	ld	r0, Z+
 410:	0d 92       	st	X+, r0
 412:	8a 95       	dec	r24
 414:	e1 f7       	brne	.-8      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 416:	29 81       	ldd	r18, Y+1	; 0x01
 418:	3a 81       	ldd	r19, Y+2	; 0x02
 41a:	4b 81       	ldd	r20, Y+3	; 0x03
 41c:	5c 81       	ldd	r21, Y+4	; 0x04
 41e:	6d 81       	ldd	r22, Y+5	; 0x05
 420:	7e 81       	ldd	r23, Y+6	; 0x06
};
 422:	8f 81       	ldd	r24, Y+7	; 0x07
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	2e 96       	adiw	r28, 0x0e	; 14
 428:	0f b6       	in	r0, 0x3f	; 63
 42a:	f8 94       	cli
 42c:	de bf       	out	0x3e, r29	; 62
 42e:	0f be       	out	0x3f, r0	; 63
 430:	cd bf       	out	0x3d, r28	; 61
 432:	df 91       	pop	r29
 434:	cf 91       	pop	r28
 436:	08 95       	ret

00000438 <main>:
#include "i2c_master.h"
#include <stdio.h>


int main(void)
{
 438:	cf 93       	push	r28
 43a:	df 93       	push	r29
 43c:	cd b7       	in	r28, 0x3d	; 61
 43e:	de b7       	in	r29, 0x3e	; 62
 440:	a5 97       	sbiw	r28, 0x25	; 37
 442:	0f b6       	in	r0, 0x3f	; 63
 444:	f8 94       	cli
 446:	de bf       	out	0x3e, r29	; 62
 448:	0f be       	out	0x3f, r0	; 63
 44a:	cd bf       	out	0x3d, r28	; 61
	
	DDRB |= (1 << PB5);
 44c:	84 b1       	in	r24, 0x04	; 4
 44e:	80 62       	ori	r24, 0x20	; 32
 450:	84 b9       	out	0x04, r24	; 4
	DDRD &=(1<<2);
 452:	8a b1       	in	r24, 0x0a	; 10
 454:	84 70       	andi	r24, 0x04	; 4
 456:	8a b9       	out	0x0a, r24	; 10
	int x =5;
	char x_str[30];
	i2c_master_init(I2C_SCL_FREQUENCY_100);
 458:	60 ea       	ldi	r22, 0xA0	; 160
 45a:	76 e8       	ldi	r23, 0x86	; 134
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	0e 94 71 00 	call	0xe2	; 0xe2 <i2c_master_init>
	LiquidCrystalDevice_t device = lq_init(0x27, 20, 4, LCD_5x8DOTS);
 464:	20 e0       	ldi	r18, 0x00	; 0
 466:	44 e0       	ldi	r20, 0x04	; 4
 468:	64 e1       	ldi	r22, 0x14	; 20
 46a:	87 e2       	ldi	r24, 0x27	; 39
 46c:	0e 94 8e 01 	call	0x31c	; 0x31c <lq_init>
 470:	2f 8f       	std	Y+31, r18	; 0x1f
 472:	38 a3       	std	Y+32, r19	; 0x20
 474:	49 a3       	std	Y+33, r20	; 0x21
 476:	5a a3       	std	Y+34, r21	; 0x22
 478:	6b a3       	std	Y+35, r22	; 0x23
 47a:	7c a3       	std	Y+36, r23	; 0x24
 47c:	8d a3       	std	Y+37, r24	; 0x25
	lq_turnOnBacklight(&device); // simply turning on the backlight
 47e:	ce 01       	movw	r24, r28
 480:	4f 96       	adiw	r24, 0x1f	; 31
 482:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <lq_turnOnBacklight>
int main(void)
{
	
	DDRB |= (1 << PB5);
	DDRD &=(1<<2);
	int x =5;
 486:	05 e0       	ldi	r16, 0x05	; 5
 488:	10 e0       	ldi	r17, 0x00	; 0
	while (1)
	{
		// Turn on the LED
		
		
		if (PIND & (1 << 2)) {
 48a:	4a 9b       	sbis	0x09, 2	; 9
 48c:	fe cf       	rjmp	.-4      	; 0x48a <main+0x52>
			while(PIND & (1 << 2)) {}
 48e:	4a 99       	sbic	0x09, 2	; 9
 490:	fe cf       	rjmp	.-4      	; 0x48e <main+0x56>
			x+=1;
 492:	0f 5f       	subi	r16, 0xFF	; 255
 494:	1f 4f       	sbci	r17, 0xFF	; 255
			sprintf(x_str, "%d", x);
 496:	1f 93       	push	r17
 498:	0f 93       	push	r16
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	91 e0       	ldi	r25, 0x01	; 1
 49e:	9f 93       	push	r25
 4a0:	8f 93       	push	r24
 4a2:	ce 01       	movw	r24, r28
 4a4:	01 96       	adiw	r24, 0x01	; 1
 4a6:	7c 01       	movw	r14, r24
 4a8:	9f 93       	push	r25
 4aa:	8f 93       	push	r24
 4ac:	0e 94 8c 02 	call	0x518	; 0x518 <sprintf>
			lq_print(&device, x_str);
 4b0:	b7 01       	movw	r22, r14
 4b2:	ce 01       	movw	r24, r28
 4b4:	4f 96       	adiw	r24, 0x1f	; 31
 4b6:	0e 94 2f 01 	call	0x25e	; 0x25e <lq_print>
			lq_setCursor(&device, 1, 0);
 4ba:	40 e0       	ldi	r20, 0x00	; 0
 4bc:	61 e0       	ldi	r22, 0x01	; 1
 4be:	ce 01       	movw	r24, r28
 4c0:	4f 96       	adiw	r24, 0x1f	; 31
 4c2:	0e 94 48 01 	call	0x290	; 0x290 <lq_setCursor>
 4c6:	0f 90       	pop	r0
 4c8:	0f 90       	pop	r0
 4ca:	0f 90       	pop	r0
 4cc:	0f 90       	pop	r0
 4ce:	0f 90       	pop	r0
 4d0:	0f 90       	pop	r0
 4d2:	db cf       	rjmp	.-74     	; 0x48a <main+0x52>

000004d4 <__udivmodsi4>:
 4d4:	a1 e2       	ldi	r26, 0x21	; 33
 4d6:	1a 2e       	mov	r1, r26
 4d8:	aa 1b       	sub	r26, r26
 4da:	bb 1b       	sub	r27, r27
 4dc:	fd 01       	movw	r30, r26
 4de:	0d c0       	rjmp	.+26     	; 0x4fa <__udivmodsi4_ep>

000004e0 <__udivmodsi4_loop>:
 4e0:	aa 1f       	adc	r26, r26
 4e2:	bb 1f       	adc	r27, r27
 4e4:	ee 1f       	adc	r30, r30
 4e6:	ff 1f       	adc	r31, r31
 4e8:	a2 17       	cp	r26, r18
 4ea:	b3 07       	cpc	r27, r19
 4ec:	e4 07       	cpc	r30, r20
 4ee:	f5 07       	cpc	r31, r21
 4f0:	20 f0       	brcs	.+8      	; 0x4fa <__udivmodsi4_ep>
 4f2:	a2 1b       	sub	r26, r18
 4f4:	b3 0b       	sbc	r27, r19
 4f6:	e4 0b       	sbc	r30, r20
 4f8:	f5 0b       	sbc	r31, r21

000004fa <__udivmodsi4_ep>:
 4fa:	66 1f       	adc	r22, r22
 4fc:	77 1f       	adc	r23, r23
 4fe:	88 1f       	adc	r24, r24
 500:	99 1f       	adc	r25, r25
 502:	1a 94       	dec	r1
 504:	69 f7       	brne	.-38     	; 0x4e0 <__udivmodsi4_loop>
 506:	60 95       	com	r22
 508:	70 95       	com	r23
 50a:	80 95       	com	r24
 50c:	90 95       	com	r25
 50e:	9b 01       	movw	r18, r22
 510:	ac 01       	movw	r20, r24
 512:	bd 01       	movw	r22, r26
 514:	cf 01       	movw	r24, r30
 516:	08 95       	ret

00000518 <sprintf>:
 518:	ae e0       	ldi	r26, 0x0E	; 14
 51a:	b0 e0       	ldi	r27, 0x00	; 0
 51c:	e2 e9       	ldi	r30, 0x92	; 146
 51e:	f2 e0       	ldi	r31, 0x02	; 2
 520:	0c 94 4d 05 	jmp	0xa9a	; 0xa9a <__prologue_saves__+0x1c>
 524:	0d 89       	ldd	r16, Y+21	; 0x15
 526:	1e 89       	ldd	r17, Y+22	; 0x16
 528:	86 e0       	ldi	r24, 0x06	; 6
 52a:	8c 83       	std	Y+4, r24	; 0x04
 52c:	1a 83       	std	Y+2, r17	; 0x02
 52e:	09 83       	std	Y+1, r16	; 0x01
 530:	8f ef       	ldi	r24, 0xFF	; 255
 532:	9f e7       	ldi	r25, 0x7F	; 127
 534:	9e 83       	std	Y+6, r25	; 0x06
 536:	8d 83       	std	Y+5, r24	; 0x05
 538:	ae 01       	movw	r20, r28
 53a:	47 5e       	subi	r20, 0xE7	; 231
 53c:	5f 4f       	sbci	r21, 0xFF	; 255
 53e:	6f 89       	ldd	r22, Y+23	; 0x17
 540:	78 8d       	ldd	r23, Y+24	; 0x18
 542:	ce 01       	movw	r24, r28
 544:	01 96       	adiw	r24, 0x01	; 1
 546:	0e 94 ae 02 	call	0x55c	; 0x55c <vfprintf>
 54a:	ef 81       	ldd	r30, Y+7	; 0x07
 54c:	f8 85       	ldd	r31, Y+8	; 0x08
 54e:	e0 0f       	add	r30, r16
 550:	f1 1f       	adc	r31, r17
 552:	10 82       	st	Z, r1
 554:	2e 96       	adiw	r28, 0x0e	; 14
 556:	e4 e0       	ldi	r30, 0x04	; 4
 558:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__epilogue_restores__+0x1c>

0000055c <vfprintf>:
 55c:	ab e0       	ldi	r26, 0x0B	; 11
 55e:	b0 e0       	ldi	r27, 0x00	; 0
 560:	e4 eb       	ldi	r30, 0xB4	; 180
 562:	f2 e0       	ldi	r31, 0x02	; 2
 564:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <__prologue_saves__>
 568:	6c 01       	movw	r12, r24
 56a:	7b 01       	movw	r14, r22
 56c:	8a 01       	movw	r16, r20
 56e:	fc 01       	movw	r30, r24
 570:	17 82       	std	Z+7, r1	; 0x07
 572:	16 82       	std	Z+6, r1	; 0x06
 574:	83 81       	ldd	r24, Z+3	; 0x03
 576:	81 ff       	sbrs	r24, 1
 578:	cc c1       	rjmp	.+920    	; 0x912 <__stack+0x13>
 57a:	ce 01       	movw	r24, r28
 57c:	01 96       	adiw	r24, 0x01	; 1
 57e:	3c 01       	movw	r6, r24
 580:	f6 01       	movw	r30, r12
 582:	93 81       	ldd	r25, Z+3	; 0x03
 584:	f7 01       	movw	r30, r14
 586:	93 fd       	sbrc	r25, 3
 588:	85 91       	lpm	r24, Z+
 58a:	93 ff       	sbrs	r25, 3
 58c:	81 91       	ld	r24, Z+
 58e:	7f 01       	movw	r14, r30
 590:	88 23       	and	r24, r24
 592:	09 f4       	brne	.+2      	; 0x596 <vfprintf+0x3a>
 594:	ba c1       	rjmp	.+884    	; 0x90a <__stack+0xb>
 596:	85 32       	cpi	r24, 0x25	; 37
 598:	39 f4       	brne	.+14     	; 0x5a8 <vfprintf+0x4c>
 59a:	93 fd       	sbrc	r25, 3
 59c:	85 91       	lpm	r24, Z+
 59e:	93 ff       	sbrs	r25, 3
 5a0:	81 91       	ld	r24, Z+
 5a2:	7f 01       	movw	r14, r30
 5a4:	85 32       	cpi	r24, 0x25	; 37
 5a6:	29 f4       	brne	.+10     	; 0x5b2 <vfprintf+0x56>
 5a8:	b6 01       	movw	r22, r12
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 5b0:	e7 cf       	rjmp	.-50     	; 0x580 <vfprintf+0x24>
 5b2:	91 2c       	mov	r9, r1
 5b4:	21 2c       	mov	r2, r1
 5b6:	31 2c       	mov	r3, r1
 5b8:	ff e1       	ldi	r31, 0x1F	; 31
 5ba:	f3 15       	cp	r31, r3
 5bc:	d8 f0       	brcs	.+54     	; 0x5f4 <vfprintf+0x98>
 5be:	8b 32       	cpi	r24, 0x2B	; 43
 5c0:	79 f0       	breq	.+30     	; 0x5e0 <vfprintf+0x84>
 5c2:	38 f4       	brcc	.+14     	; 0x5d2 <vfprintf+0x76>
 5c4:	80 32       	cpi	r24, 0x20	; 32
 5c6:	79 f0       	breq	.+30     	; 0x5e6 <vfprintf+0x8a>
 5c8:	83 32       	cpi	r24, 0x23	; 35
 5ca:	a1 f4       	brne	.+40     	; 0x5f4 <vfprintf+0x98>
 5cc:	23 2d       	mov	r18, r3
 5ce:	20 61       	ori	r18, 0x10	; 16
 5d0:	1d c0       	rjmp	.+58     	; 0x60c <vfprintf+0xb0>
 5d2:	8d 32       	cpi	r24, 0x2D	; 45
 5d4:	61 f0       	breq	.+24     	; 0x5ee <vfprintf+0x92>
 5d6:	80 33       	cpi	r24, 0x30	; 48
 5d8:	69 f4       	brne	.+26     	; 0x5f4 <vfprintf+0x98>
 5da:	23 2d       	mov	r18, r3
 5dc:	21 60       	ori	r18, 0x01	; 1
 5de:	16 c0       	rjmp	.+44     	; 0x60c <vfprintf+0xb0>
 5e0:	83 2d       	mov	r24, r3
 5e2:	82 60       	ori	r24, 0x02	; 2
 5e4:	38 2e       	mov	r3, r24
 5e6:	e3 2d       	mov	r30, r3
 5e8:	e4 60       	ori	r30, 0x04	; 4
 5ea:	3e 2e       	mov	r3, r30
 5ec:	2a c0       	rjmp	.+84     	; 0x642 <vfprintf+0xe6>
 5ee:	f3 2d       	mov	r31, r3
 5f0:	f8 60       	ori	r31, 0x08	; 8
 5f2:	1d c0       	rjmp	.+58     	; 0x62e <vfprintf+0xd2>
 5f4:	37 fc       	sbrc	r3, 7
 5f6:	2d c0       	rjmp	.+90     	; 0x652 <vfprintf+0xf6>
 5f8:	20 ed       	ldi	r18, 0xD0	; 208
 5fa:	28 0f       	add	r18, r24
 5fc:	2a 30       	cpi	r18, 0x0A	; 10
 5fe:	40 f0       	brcs	.+16     	; 0x610 <vfprintf+0xb4>
 600:	8e 32       	cpi	r24, 0x2E	; 46
 602:	b9 f4       	brne	.+46     	; 0x632 <vfprintf+0xd6>
 604:	36 fc       	sbrc	r3, 6
 606:	81 c1       	rjmp	.+770    	; 0x90a <__stack+0xb>
 608:	23 2d       	mov	r18, r3
 60a:	20 64       	ori	r18, 0x40	; 64
 60c:	32 2e       	mov	r3, r18
 60e:	19 c0       	rjmp	.+50     	; 0x642 <vfprintf+0xe6>
 610:	36 fe       	sbrs	r3, 6
 612:	06 c0       	rjmp	.+12     	; 0x620 <vfprintf+0xc4>
 614:	8a e0       	ldi	r24, 0x0A	; 10
 616:	98 9e       	mul	r9, r24
 618:	20 0d       	add	r18, r0
 61a:	11 24       	eor	r1, r1
 61c:	92 2e       	mov	r9, r18
 61e:	11 c0       	rjmp	.+34     	; 0x642 <vfprintf+0xe6>
 620:	ea e0       	ldi	r30, 0x0A	; 10
 622:	2e 9e       	mul	r2, r30
 624:	20 0d       	add	r18, r0
 626:	11 24       	eor	r1, r1
 628:	22 2e       	mov	r2, r18
 62a:	f3 2d       	mov	r31, r3
 62c:	f0 62       	ori	r31, 0x20	; 32
 62e:	3f 2e       	mov	r3, r31
 630:	08 c0       	rjmp	.+16     	; 0x642 <vfprintf+0xe6>
 632:	8c 36       	cpi	r24, 0x6C	; 108
 634:	21 f4       	brne	.+8      	; 0x63e <vfprintf+0xe2>
 636:	83 2d       	mov	r24, r3
 638:	80 68       	ori	r24, 0x80	; 128
 63a:	38 2e       	mov	r3, r24
 63c:	02 c0       	rjmp	.+4      	; 0x642 <vfprintf+0xe6>
 63e:	88 36       	cpi	r24, 0x68	; 104
 640:	41 f4       	brne	.+16     	; 0x652 <vfprintf+0xf6>
 642:	f7 01       	movw	r30, r14
 644:	93 fd       	sbrc	r25, 3
 646:	85 91       	lpm	r24, Z+
 648:	93 ff       	sbrs	r25, 3
 64a:	81 91       	ld	r24, Z+
 64c:	7f 01       	movw	r14, r30
 64e:	81 11       	cpse	r24, r1
 650:	b3 cf       	rjmp	.-154    	; 0x5b8 <vfprintf+0x5c>
 652:	98 2f       	mov	r25, r24
 654:	9f 7d       	andi	r25, 0xDF	; 223
 656:	95 54       	subi	r25, 0x45	; 69
 658:	93 30       	cpi	r25, 0x03	; 3
 65a:	28 f4       	brcc	.+10     	; 0x666 <vfprintf+0x10a>
 65c:	0c 5f       	subi	r16, 0xFC	; 252
 65e:	1f 4f       	sbci	r17, 0xFF	; 255
 660:	9f e3       	ldi	r25, 0x3F	; 63
 662:	99 83       	std	Y+1, r25	; 0x01
 664:	0d c0       	rjmp	.+26     	; 0x680 <vfprintf+0x124>
 666:	83 36       	cpi	r24, 0x63	; 99
 668:	31 f0       	breq	.+12     	; 0x676 <vfprintf+0x11a>
 66a:	83 37       	cpi	r24, 0x73	; 115
 66c:	71 f0       	breq	.+28     	; 0x68a <vfprintf+0x12e>
 66e:	83 35       	cpi	r24, 0x53	; 83
 670:	09 f0       	breq	.+2      	; 0x674 <vfprintf+0x118>
 672:	59 c0       	rjmp	.+178    	; 0x726 <vfprintf+0x1ca>
 674:	21 c0       	rjmp	.+66     	; 0x6b8 <vfprintf+0x15c>
 676:	f8 01       	movw	r30, r16
 678:	80 81       	ld	r24, Z
 67a:	89 83       	std	Y+1, r24	; 0x01
 67c:	0e 5f       	subi	r16, 0xFE	; 254
 67e:	1f 4f       	sbci	r17, 0xFF	; 255
 680:	88 24       	eor	r8, r8
 682:	83 94       	inc	r8
 684:	91 2c       	mov	r9, r1
 686:	53 01       	movw	r10, r6
 688:	13 c0       	rjmp	.+38     	; 0x6b0 <vfprintf+0x154>
 68a:	28 01       	movw	r4, r16
 68c:	f2 e0       	ldi	r31, 0x02	; 2
 68e:	4f 0e       	add	r4, r31
 690:	51 1c       	adc	r5, r1
 692:	f8 01       	movw	r30, r16
 694:	a0 80       	ld	r10, Z
 696:	b1 80       	ldd	r11, Z+1	; 0x01
 698:	36 fe       	sbrs	r3, 6
 69a:	03 c0       	rjmp	.+6      	; 0x6a2 <vfprintf+0x146>
 69c:	69 2d       	mov	r22, r9
 69e:	70 e0       	ldi	r23, 0x00	; 0
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <vfprintf+0x14a>
 6a2:	6f ef       	ldi	r22, 0xFF	; 255
 6a4:	7f ef       	ldi	r23, 0xFF	; 255
 6a6:	c5 01       	movw	r24, r10
 6a8:	0e 94 9a 04 	call	0x934	; 0x934 <strnlen>
 6ac:	4c 01       	movw	r8, r24
 6ae:	82 01       	movw	r16, r4
 6b0:	f3 2d       	mov	r31, r3
 6b2:	ff 77       	andi	r31, 0x7F	; 127
 6b4:	3f 2e       	mov	r3, r31
 6b6:	16 c0       	rjmp	.+44     	; 0x6e4 <vfprintf+0x188>
 6b8:	28 01       	movw	r4, r16
 6ba:	22 e0       	ldi	r18, 0x02	; 2
 6bc:	42 0e       	add	r4, r18
 6be:	51 1c       	adc	r5, r1
 6c0:	f8 01       	movw	r30, r16
 6c2:	a0 80       	ld	r10, Z
 6c4:	b1 80       	ldd	r11, Z+1	; 0x01
 6c6:	36 fe       	sbrs	r3, 6
 6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <vfprintf+0x174>
 6ca:	69 2d       	mov	r22, r9
 6cc:	70 e0       	ldi	r23, 0x00	; 0
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <vfprintf+0x178>
 6d0:	6f ef       	ldi	r22, 0xFF	; 255
 6d2:	7f ef       	ldi	r23, 0xFF	; 255
 6d4:	c5 01       	movw	r24, r10
 6d6:	0e 94 8f 04 	call	0x91e	; 0x91e <strnlen_P>
 6da:	4c 01       	movw	r8, r24
 6dc:	f3 2d       	mov	r31, r3
 6de:	f0 68       	ori	r31, 0x80	; 128
 6e0:	3f 2e       	mov	r3, r31
 6e2:	82 01       	movw	r16, r4
 6e4:	33 fc       	sbrc	r3, 3
 6e6:	1b c0       	rjmp	.+54     	; 0x71e <vfprintf+0x1c2>
 6e8:	82 2d       	mov	r24, r2
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	88 16       	cp	r8, r24
 6ee:	99 06       	cpc	r9, r25
 6f0:	b0 f4       	brcc	.+44     	; 0x71e <vfprintf+0x1c2>
 6f2:	b6 01       	movw	r22, r12
 6f4:	80 e2       	ldi	r24, 0x20	; 32
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 6fc:	2a 94       	dec	r2
 6fe:	f4 cf       	rjmp	.-24     	; 0x6e8 <vfprintf+0x18c>
 700:	f5 01       	movw	r30, r10
 702:	37 fc       	sbrc	r3, 7
 704:	85 91       	lpm	r24, Z+
 706:	37 fe       	sbrs	r3, 7
 708:	81 91       	ld	r24, Z+
 70a:	5f 01       	movw	r10, r30
 70c:	b6 01       	movw	r22, r12
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 714:	21 10       	cpse	r2, r1
 716:	2a 94       	dec	r2
 718:	21 e0       	ldi	r18, 0x01	; 1
 71a:	82 1a       	sub	r8, r18
 71c:	91 08       	sbc	r9, r1
 71e:	81 14       	cp	r8, r1
 720:	91 04       	cpc	r9, r1
 722:	71 f7       	brne	.-36     	; 0x700 <vfprintf+0x1a4>
 724:	e8 c0       	rjmp	.+464    	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 726:	84 36       	cpi	r24, 0x64	; 100
 728:	11 f0       	breq	.+4      	; 0x72e <vfprintf+0x1d2>
 72a:	89 36       	cpi	r24, 0x69	; 105
 72c:	41 f5       	brne	.+80     	; 0x77e <vfprintf+0x222>
 72e:	f8 01       	movw	r30, r16
 730:	37 fe       	sbrs	r3, 7
 732:	07 c0       	rjmp	.+14     	; 0x742 <vfprintf+0x1e6>
 734:	60 81       	ld	r22, Z
 736:	71 81       	ldd	r23, Z+1	; 0x01
 738:	82 81       	ldd	r24, Z+2	; 0x02
 73a:	93 81       	ldd	r25, Z+3	; 0x03
 73c:	0c 5f       	subi	r16, 0xFC	; 252
 73e:	1f 4f       	sbci	r17, 0xFF	; 255
 740:	08 c0       	rjmp	.+16     	; 0x752 <vfprintf+0x1f6>
 742:	60 81       	ld	r22, Z
 744:	71 81       	ldd	r23, Z+1	; 0x01
 746:	07 2e       	mov	r0, r23
 748:	00 0c       	add	r0, r0
 74a:	88 0b       	sbc	r24, r24
 74c:	99 0b       	sbc	r25, r25
 74e:	0e 5f       	subi	r16, 0xFE	; 254
 750:	1f 4f       	sbci	r17, 0xFF	; 255
 752:	f3 2d       	mov	r31, r3
 754:	ff 76       	andi	r31, 0x6F	; 111
 756:	3f 2e       	mov	r3, r31
 758:	97 ff       	sbrs	r25, 7
 75a:	09 c0       	rjmp	.+18     	; 0x76e <vfprintf+0x212>
 75c:	90 95       	com	r25
 75e:	80 95       	com	r24
 760:	70 95       	com	r23
 762:	61 95       	neg	r22
 764:	7f 4f       	sbci	r23, 0xFF	; 255
 766:	8f 4f       	sbci	r24, 0xFF	; 255
 768:	9f 4f       	sbci	r25, 0xFF	; 255
 76a:	f0 68       	ori	r31, 0x80	; 128
 76c:	3f 2e       	mov	r3, r31
 76e:	2a e0       	ldi	r18, 0x0A	; 10
 770:	30 e0       	ldi	r19, 0x00	; 0
 772:	a3 01       	movw	r20, r6
 774:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__ultoa_invert>
 778:	88 2e       	mov	r8, r24
 77a:	86 18       	sub	r8, r6
 77c:	45 c0       	rjmp	.+138    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 77e:	85 37       	cpi	r24, 0x75	; 117
 780:	31 f4       	brne	.+12     	; 0x78e <vfprintf+0x232>
 782:	23 2d       	mov	r18, r3
 784:	2f 7e       	andi	r18, 0xEF	; 239
 786:	b2 2e       	mov	r11, r18
 788:	2a e0       	ldi	r18, 0x0A	; 10
 78a:	30 e0       	ldi	r19, 0x00	; 0
 78c:	25 c0       	rjmp	.+74     	; 0x7d8 <vfprintf+0x27c>
 78e:	93 2d       	mov	r25, r3
 790:	99 7f       	andi	r25, 0xF9	; 249
 792:	b9 2e       	mov	r11, r25
 794:	8f 36       	cpi	r24, 0x6F	; 111
 796:	c1 f0       	breq	.+48     	; 0x7c8 <vfprintf+0x26c>
 798:	18 f4       	brcc	.+6      	; 0x7a0 <vfprintf+0x244>
 79a:	88 35       	cpi	r24, 0x58	; 88
 79c:	79 f0       	breq	.+30     	; 0x7bc <vfprintf+0x260>
 79e:	b5 c0       	rjmp	.+362    	; 0x90a <__stack+0xb>
 7a0:	80 37       	cpi	r24, 0x70	; 112
 7a2:	19 f0       	breq	.+6      	; 0x7aa <vfprintf+0x24e>
 7a4:	88 37       	cpi	r24, 0x78	; 120
 7a6:	21 f0       	breq	.+8      	; 0x7b0 <vfprintf+0x254>
 7a8:	b0 c0       	rjmp	.+352    	; 0x90a <__stack+0xb>
 7aa:	e9 2f       	mov	r30, r25
 7ac:	e0 61       	ori	r30, 0x10	; 16
 7ae:	be 2e       	mov	r11, r30
 7b0:	b4 fe       	sbrs	r11, 4
 7b2:	0d c0       	rjmp	.+26     	; 0x7ce <vfprintf+0x272>
 7b4:	fb 2d       	mov	r31, r11
 7b6:	f4 60       	ori	r31, 0x04	; 4
 7b8:	bf 2e       	mov	r11, r31
 7ba:	09 c0       	rjmp	.+18     	; 0x7ce <vfprintf+0x272>
 7bc:	34 fe       	sbrs	r3, 4
 7be:	0a c0       	rjmp	.+20     	; 0x7d4 <vfprintf+0x278>
 7c0:	29 2f       	mov	r18, r25
 7c2:	26 60       	ori	r18, 0x06	; 6
 7c4:	b2 2e       	mov	r11, r18
 7c6:	06 c0       	rjmp	.+12     	; 0x7d4 <vfprintf+0x278>
 7c8:	28 e0       	ldi	r18, 0x08	; 8
 7ca:	30 e0       	ldi	r19, 0x00	; 0
 7cc:	05 c0       	rjmp	.+10     	; 0x7d8 <vfprintf+0x27c>
 7ce:	20 e1       	ldi	r18, 0x10	; 16
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <vfprintf+0x27c>
 7d4:	20 e1       	ldi	r18, 0x10	; 16
 7d6:	32 e0       	ldi	r19, 0x02	; 2
 7d8:	f8 01       	movw	r30, r16
 7da:	b7 fe       	sbrs	r11, 7
 7dc:	07 c0       	rjmp	.+14     	; 0x7ec <vfprintf+0x290>
 7de:	60 81       	ld	r22, Z
 7e0:	71 81       	ldd	r23, Z+1	; 0x01
 7e2:	82 81       	ldd	r24, Z+2	; 0x02
 7e4:	93 81       	ldd	r25, Z+3	; 0x03
 7e6:	0c 5f       	subi	r16, 0xFC	; 252
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	06 c0       	rjmp	.+12     	; 0x7f8 <vfprintf+0x29c>
 7ec:	60 81       	ld	r22, Z
 7ee:	71 81       	ldd	r23, Z+1	; 0x01
 7f0:	80 e0       	ldi	r24, 0x00	; 0
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	0e 5f       	subi	r16, 0xFE	; 254
 7f6:	1f 4f       	sbci	r17, 0xFF	; 255
 7f8:	a3 01       	movw	r20, r6
 7fa:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__ultoa_invert>
 7fe:	88 2e       	mov	r8, r24
 800:	86 18       	sub	r8, r6
 802:	fb 2d       	mov	r31, r11
 804:	ff 77       	andi	r31, 0x7F	; 127
 806:	3f 2e       	mov	r3, r31
 808:	36 fe       	sbrs	r3, 6
 80a:	0d c0       	rjmp	.+26     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 80c:	23 2d       	mov	r18, r3
 80e:	2e 7f       	andi	r18, 0xFE	; 254
 810:	a2 2e       	mov	r10, r18
 812:	89 14       	cp	r8, r9
 814:	58 f4       	brcc	.+22     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 816:	34 fe       	sbrs	r3, 4
 818:	0b c0       	rjmp	.+22     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 81a:	32 fc       	sbrc	r3, 2
 81c:	09 c0       	rjmp	.+18     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 81e:	83 2d       	mov	r24, r3
 820:	8e 7e       	andi	r24, 0xEE	; 238
 822:	a8 2e       	mov	r10, r24
 824:	05 c0       	rjmp	.+10     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 826:	b8 2c       	mov	r11, r8
 828:	a3 2c       	mov	r10, r3
 82a:	03 c0       	rjmp	.+6      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 82c:	b8 2c       	mov	r11, r8
 82e:	01 c0       	rjmp	.+2      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 830:	b9 2c       	mov	r11, r9
 832:	a4 fe       	sbrs	r10, 4
 834:	0f c0       	rjmp	.+30     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 836:	fe 01       	movw	r30, r28
 838:	e8 0d       	add	r30, r8
 83a:	f1 1d       	adc	r31, r1
 83c:	80 81       	ld	r24, Z
 83e:	80 33       	cpi	r24, 0x30	; 48
 840:	21 f4       	brne	.+8      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 842:	9a 2d       	mov	r25, r10
 844:	99 7e       	andi	r25, 0xE9	; 233
 846:	a9 2e       	mov	r10, r25
 848:	09 c0       	rjmp	.+18     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 84a:	a2 fe       	sbrs	r10, 2
 84c:	06 c0       	rjmp	.+12     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 84e:	b3 94       	inc	r11
 850:	b3 94       	inc	r11
 852:	04 c0       	rjmp	.+8      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 854:	8a 2d       	mov	r24, r10
 856:	86 78       	andi	r24, 0x86	; 134
 858:	09 f0       	breq	.+2      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 85a:	b3 94       	inc	r11
 85c:	a3 fc       	sbrc	r10, 3
 85e:	11 c0       	rjmp	.+34     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 860:	a0 fe       	sbrs	r10, 0
 862:	06 c0       	rjmp	.+12     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 864:	b2 14       	cp	r11, r2
 866:	88 f4       	brcc	.+34     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 868:	28 0c       	add	r2, r8
 86a:	92 2c       	mov	r9, r2
 86c:	9b 18       	sub	r9, r11
 86e:	0e c0       	rjmp	.+28     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 870:	b2 14       	cp	r11, r2
 872:	60 f4       	brcc	.+24     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 874:	b6 01       	movw	r22, r12
 876:	80 e2       	ldi	r24, 0x20	; 32
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 87e:	b3 94       	inc	r11
 880:	f7 cf       	rjmp	.-18     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 882:	b2 14       	cp	r11, r2
 884:	18 f4       	brcc	.+6      	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 886:	2b 18       	sub	r2, r11
 888:	02 c0       	rjmp	.+4      	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
 88a:	98 2c       	mov	r9, r8
 88c:	21 2c       	mov	r2, r1
 88e:	a4 fe       	sbrs	r10, 4
 890:	10 c0       	rjmp	.+32     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 892:	b6 01       	movw	r22, r12
 894:	80 e3       	ldi	r24, 0x30	; 48
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 89c:	a2 fe       	sbrs	r10, 2
 89e:	17 c0       	rjmp	.+46     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8a0:	a1 fc       	sbrc	r10, 1
 8a2:	03 c0       	rjmp	.+6      	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 8a4:	88 e7       	ldi	r24, 0x78	; 120
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8aa:	88 e5       	ldi	r24, 0x58	; 88
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	b6 01       	movw	r22, r12
 8b0:	0c c0       	rjmp	.+24     	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8b2:	8a 2d       	mov	r24, r10
 8b4:	86 78       	andi	r24, 0x86	; 134
 8b6:	59 f0       	breq	.+22     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8b8:	a1 fe       	sbrs	r10, 1
 8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 8bc:	8b e2       	ldi	r24, 0x2B	; 43
 8be:	01 c0       	rjmp	.+2      	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8c0:	80 e2       	ldi	r24, 0x20	; 32
 8c2:	a7 fc       	sbrc	r10, 7
 8c4:	8d e2       	ldi	r24, 0x2D	; 45
 8c6:	b6 01       	movw	r22, r12
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 8ce:	89 14       	cp	r8, r9
 8d0:	38 f4       	brcc	.+14     	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8d2:	b6 01       	movw	r22, r12
 8d4:	80 e3       	ldi	r24, 0x30	; 48
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 8dc:	9a 94       	dec	r9
 8de:	f7 cf       	rjmp	.-18     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8e0:	8a 94       	dec	r8
 8e2:	f3 01       	movw	r30, r6
 8e4:	e8 0d       	add	r30, r8
 8e6:	f1 1d       	adc	r31, r1
 8e8:	80 81       	ld	r24, Z
 8ea:	b6 01       	movw	r22, r12
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 8f2:	81 10       	cpse	r8, r1
 8f4:	f5 cf       	rjmp	.-22     	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
 8f6:	22 20       	and	r2, r2
 8f8:	09 f4       	brne	.+2      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8fa:	42 ce       	rjmp	.-892    	; 0x580 <vfprintf+0x24>
 8fc:	b6 01       	movw	r22, r12
 8fe:	80 e2       	ldi	r24, 0x20	; 32
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 906:	2a 94       	dec	r2
 908:	f6 cf       	rjmp	.-20     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 90a:	f6 01       	movw	r30, r12
 90c:	86 81       	ldd	r24, Z+6	; 0x06
 90e:	97 81       	ldd	r25, Z+7	; 0x07
 910:	02 c0       	rjmp	.+4      	; 0x916 <__stack+0x17>
 912:	8f ef       	ldi	r24, 0xFF	; 255
 914:	9f ef       	ldi	r25, 0xFF	; 255
 916:	2b 96       	adiw	r28, 0x0b	; 11
 918:	e2 e1       	ldi	r30, 0x12	; 18
 91a:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__epilogue_restores__>

0000091e <strnlen_P>:
 91e:	fc 01       	movw	r30, r24
 920:	05 90       	lpm	r0, Z+
 922:	61 50       	subi	r22, 0x01	; 1
 924:	70 40       	sbci	r23, 0x00	; 0
 926:	01 10       	cpse	r0, r1
 928:	d8 f7       	brcc	.-10     	; 0x920 <strnlen_P+0x2>
 92a:	80 95       	com	r24
 92c:	90 95       	com	r25
 92e:	8e 0f       	add	r24, r30
 930:	9f 1f       	adc	r25, r31
 932:	08 95       	ret

00000934 <strnlen>:
 934:	fc 01       	movw	r30, r24
 936:	61 50       	subi	r22, 0x01	; 1
 938:	70 40       	sbci	r23, 0x00	; 0
 93a:	01 90       	ld	r0, Z+
 93c:	01 10       	cpse	r0, r1
 93e:	d8 f7       	brcc	.-10     	; 0x936 <strnlen+0x2>
 940:	80 95       	com	r24
 942:	90 95       	com	r25
 944:	8e 0f       	add	r24, r30
 946:	9f 1f       	adc	r25, r31
 948:	08 95       	ret

0000094a <fputc>:
 94a:	0f 93       	push	r16
 94c:	1f 93       	push	r17
 94e:	cf 93       	push	r28
 950:	df 93       	push	r29
 952:	fb 01       	movw	r30, r22
 954:	23 81       	ldd	r18, Z+3	; 0x03
 956:	21 fd       	sbrc	r18, 1
 958:	03 c0       	rjmp	.+6      	; 0x960 <fputc+0x16>
 95a:	8f ef       	ldi	r24, 0xFF	; 255
 95c:	9f ef       	ldi	r25, 0xFF	; 255
 95e:	2c c0       	rjmp	.+88     	; 0x9b8 <fputc+0x6e>
 960:	22 ff       	sbrs	r18, 2
 962:	16 c0       	rjmp	.+44     	; 0x990 <fputc+0x46>
 964:	46 81       	ldd	r20, Z+6	; 0x06
 966:	57 81       	ldd	r21, Z+7	; 0x07
 968:	24 81       	ldd	r18, Z+4	; 0x04
 96a:	35 81       	ldd	r19, Z+5	; 0x05
 96c:	42 17       	cp	r20, r18
 96e:	53 07       	cpc	r21, r19
 970:	44 f4       	brge	.+16     	; 0x982 <fputc+0x38>
 972:	a0 81       	ld	r26, Z
 974:	b1 81       	ldd	r27, Z+1	; 0x01
 976:	9d 01       	movw	r18, r26
 978:	2f 5f       	subi	r18, 0xFF	; 255
 97a:	3f 4f       	sbci	r19, 0xFF	; 255
 97c:	31 83       	std	Z+1, r19	; 0x01
 97e:	20 83       	st	Z, r18
 980:	8c 93       	st	X, r24
 982:	26 81       	ldd	r18, Z+6	; 0x06
 984:	37 81       	ldd	r19, Z+7	; 0x07
 986:	2f 5f       	subi	r18, 0xFF	; 255
 988:	3f 4f       	sbci	r19, 0xFF	; 255
 98a:	37 83       	std	Z+7, r19	; 0x07
 98c:	26 83       	std	Z+6, r18	; 0x06
 98e:	14 c0       	rjmp	.+40     	; 0x9b8 <fputc+0x6e>
 990:	8b 01       	movw	r16, r22
 992:	ec 01       	movw	r28, r24
 994:	fb 01       	movw	r30, r22
 996:	00 84       	ldd	r0, Z+8	; 0x08
 998:	f1 85       	ldd	r31, Z+9	; 0x09
 99a:	e0 2d       	mov	r30, r0
 99c:	09 95       	icall
 99e:	89 2b       	or	r24, r25
 9a0:	e1 f6       	brne	.-72     	; 0x95a <fputc+0x10>
 9a2:	d8 01       	movw	r26, r16
 9a4:	16 96       	adiw	r26, 0x06	; 6
 9a6:	8d 91       	ld	r24, X+
 9a8:	9c 91       	ld	r25, X
 9aa:	17 97       	sbiw	r26, 0x07	; 7
 9ac:	01 96       	adiw	r24, 0x01	; 1
 9ae:	17 96       	adiw	r26, 0x07	; 7
 9b0:	9c 93       	st	X, r25
 9b2:	8e 93       	st	-X, r24
 9b4:	16 97       	sbiw	r26, 0x06	; 6
 9b6:	ce 01       	movw	r24, r28
 9b8:	df 91       	pop	r29
 9ba:	cf 91       	pop	r28
 9bc:	1f 91       	pop	r17
 9be:	0f 91       	pop	r16
 9c0:	08 95       	ret

000009c2 <__ultoa_invert>:
 9c2:	fa 01       	movw	r30, r20
 9c4:	aa 27       	eor	r26, r26
 9c6:	28 30       	cpi	r18, 0x08	; 8
 9c8:	51 f1       	breq	.+84     	; 0xa1e <__ultoa_invert+0x5c>
 9ca:	20 31       	cpi	r18, 0x10	; 16
 9cc:	81 f1       	breq	.+96     	; 0xa2e <__ultoa_invert+0x6c>
 9ce:	e8 94       	clt
 9d0:	6f 93       	push	r22
 9d2:	6e 7f       	andi	r22, 0xFE	; 254
 9d4:	6e 5f       	subi	r22, 0xFE	; 254
 9d6:	7f 4f       	sbci	r23, 0xFF	; 255
 9d8:	8f 4f       	sbci	r24, 0xFF	; 255
 9da:	9f 4f       	sbci	r25, 0xFF	; 255
 9dc:	af 4f       	sbci	r26, 0xFF	; 255
 9de:	b1 e0       	ldi	r27, 0x01	; 1
 9e0:	3e d0       	rcall	.+124    	; 0xa5e <__ultoa_invert+0x9c>
 9e2:	b4 e0       	ldi	r27, 0x04	; 4
 9e4:	3c d0       	rcall	.+120    	; 0xa5e <__ultoa_invert+0x9c>
 9e6:	67 0f       	add	r22, r23
 9e8:	78 1f       	adc	r23, r24
 9ea:	89 1f       	adc	r24, r25
 9ec:	9a 1f       	adc	r25, r26
 9ee:	a1 1d       	adc	r26, r1
 9f0:	68 0f       	add	r22, r24
 9f2:	79 1f       	adc	r23, r25
 9f4:	8a 1f       	adc	r24, r26
 9f6:	91 1d       	adc	r25, r1
 9f8:	a1 1d       	adc	r26, r1
 9fa:	6a 0f       	add	r22, r26
 9fc:	71 1d       	adc	r23, r1
 9fe:	81 1d       	adc	r24, r1
 a00:	91 1d       	adc	r25, r1
 a02:	a1 1d       	adc	r26, r1
 a04:	20 d0       	rcall	.+64     	; 0xa46 <__ultoa_invert+0x84>
 a06:	09 f4       	brne	.+2      	; 0xa0a <__ultoa_invert+0x48>
 a08:	68 94       	set
 a0a:	3f 91       	pop	r19
 a0c:	2a e0       	ldi	r18, 0x0A	; 10
 a0e:	26 9f       	mul	r18, r22
 a10:	11 24       	eor	r1, r1
 a12:	30 19       	sub	r19, r0
 a14:	30 5d       	subi	r19, 0xD0	; 208
 a16:	31 93       	st	Z+, r19
 a18:	de f6       	brtc	.-74     	; 0x9d0 <__ultoa_invert+0xe>
 a1a:	cf 01       	movw	r24, r30
 a1c:	08 95       	ret
 a1e:	46 2f       	mov	r20, r22
 a20:	47 70       	andi	r20, 0x07	; 7
 a22:	40 5d       	subi	r20, 0xD0	; 208
 a24:	41 93       	st	Z+, r20
 a26:	b3 e0       	ldi	r27, 0x03	; 3
 a28:	0f d0       	rcall	.+30     	; 0xa48 <__ultoa_invert+0x86>
 a2a:	c9 f7       	brne	.-14     	; 0xa1e <__ultoa_invert+0x5c>
 a2c:	f6 cf       	rjmp	.-20     	; 0xa1a <__ultoa_invert+0x58>
 a2e:	46 2f       	mov	r20, r22
 a30:	4f 70       	andi	r20, 0x0F	; 15
 a32:	40 5d       	subi	r20, 0xD0	; 208
 a34:	4a 33       	cpi	r20, 0x3A	; 58
 a36:	18 f0       	brcs	.+6      	; 0xa3e <__ultoa_invert+0x7c>
 a38:	49 5d       	subi	r20, 0xD9	; 217
 a3a:	31 fd       	sbrc	r19, 1
 a3c:	40 52       	subi	r20, 0x20	; 32
 a3e:	41 93       	st	Z+, r20
 a40:	02 d0       	rcall	.+4      	; 0xa46 <__ultoa_invert+0x84>
 a42:	a9 f7       	brne	.-22     	; 0xa2e <__ultoa_invert+0x6c>
 a44:	ea cf       	rjmp	.-44     	; 0xa1a <__ultoa_invert+0x58>
 a46:	b4 e0       	ldi	r27, 0x04	; 4
 a48:	a6 95       	lsr	r26
 a4a:	97 95       	ror	r25
 a4c:	87 95       	ror	r24
 a4e:	77 95       	ror	r23
 a50:	67 95       	ror	r22
 a52:	ba 95       	dec	r27
 a54:	c9 f7       	brne	.-14     	; 0xa48 <__ultoa_invert+0x86>
 a56:	00 97       	sbiw	r24, 0x00	; 0
 a58:	61 05       	cpc	r22, r1
 a5a:	71 05       	cpc	r23, r1
 a5c:	08 95       	ret
 a5e:	9b 01       	movw	r18, r22
 a60:	ac 01       	movw	r20, r24
 a62:	0a 2e       	mov	r0, r26
 a64:	06 94       	lsr	r0
 a66:	57 95       	ror	r21
 a68:	47 95       	ror	r20
 a6a:	37 95       	ror	r19
 a6c:	27 95       	ror	r18
 a6e:	ba 95       	dec	r27
 a70:	c9 f7       	brne	.-14     	; 0xa64 <__ultoa_invert+0xa2>
 a72:	62 0f       	add	r22, r18
 a74:	73 1f       	adc	r23, r19
 a76:	84 1f       	adc	r24, r20
 a78:	95 1f       	adc	r25, r21
 a7a:	a0 1d       	adc	r26, r0
 a7c:	08 95       	ret

00000a7e <__prologue_saves__>:
 a7e:	2f 92       	push	r2
 a80:	3f 92       	push	r3
 a82:	4f 92       	push	r4
 a84:	5f 92       	push	r5
 a86:	6f 92       	push	r6
 a88:	7f 92       	push	r7
 a8a:	8f 92       	push	r8
 a8c:	9f 92       	push	r9
 a8e:	af 92       	push	r10
 a90:	bf 92       	push	r11
 a92:	cf 92       	push	r12
 a94:	df 92       	push	r13
 a96:	ef 92       	push	r14
 a98:	ff 92       	push	r15
 a9a:	0f 93       	push	r16
 a9c:	1f 93       	push	r17
 a9e:	cf 93       	push	r28
 aa0:	df 93       	push	r29
 aa2:	cd b7       	in	r28, 0x3d	; 61
 aa4:	de b7       	in	r29, 0x3e	; 62
 aa6:	ca 1b       	sub	r28, r26
 aa8:	db 0b       	sbc	r29, r27
 aaa:	0f b6       	in	r0, 0x3f	; 63
 aac:	f8 94       	cli
 aae:	de bf       	out	0x3e, r29	; 62
 ab0:	0f be       	out	0x3f, r0	; 63
 ab2:	cd bf       	out	0x3d, r28	; 61
 ab4:	09 94       	ijmp

00000ab6 <__epilogue_restores__>:
 ab6:	2a 88       	ldd	r2, Y+18	; 0x12
 ab8:	39 88       	ldd	r3, Y+17	; 0x11
 aba:	48 88       	ldd	r4, Y+16	; 0x10
 abc:	5f 84       	ldd	r5, Y+15	; 0x0f
 abe:	6e 84       	ldd	r6, Y+14	; 0x0e
 ac0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ac2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ac4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ac6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ac8:	b9 84       	ldd	r11, Y+9	; 0x09
 aca:	c8 84       	ldd	r12, Y+8	; 0x08
 acc:	df 80       	ldd	r13, Y+7	; 0x07
 ace:	ee 80       	ldd	r14, Y+6	; 0x06
 ad0:	fd 80       	ldd	r15, Y+5	; 0x05
 ad2:	0c 81       	ldd	r16, Y+4	; 0x04
 ad4:	1b 81       	ldd	r17, Y+3	; 0x03
 ad6:	aa 81       	ldd	r26, Y+2	; 0x02
 ad8:	b9 81       	ldd	r27, Y+1	; 0x01
 ada:	ce 0f       	add	r28, r30
 adc:	d1 1d       	adc	r29, r1
 ade:	0f b6       	in	r0, 0x3f	; 63
 ae0:	f8 94       	cli
 ae2:	de bf       	out	0x3e, r29	; 62
 ae4:	0f be       	out	0x3f, r0	; 63
 ae6:	cd bf       	out	0x3d, r28	; 61
 ae8:	ed 01       	movw	r28, r26
 aea:	08 95       	ret

00000aec <_exit>:
 aec:	f8 94       	cli

00000aee <__stop_program>:
 aee:	ff cf       	rjmp	.-2      	; 0xaee <__stop_program>
